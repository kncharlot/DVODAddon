<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
--> 
<Module>
    <ModulePrefs title="DVOD Gadget"
                 description=""
                 height="20"
                 author=""
                 author_email=""
                 author_location="">
 
        <!-- Declare feature dependencies.
The first one is not specific to Gmail contextual gadgets. -->
        <Require feature="dynamic-height"/>
 
        <!-- The next feature, google.contentmatch, is required for all
Gmail contextual gadgets.
<Param> - specify one or more comma-separated extractor IDs in
a param named "extractors". This line is overridden by the extractor ID
in the manifest, but is still expected to be present. -->
        <Require feature="google.contentmatch">
            <Param name="extractors">
                google.com:MessageIDExtractor,google.com:SenderEmailExtractor,google.com:RawSubjectExtractor,google.com:RecipientEmailExtractor
            </Param>
        </Require>
    </ModulePrefs>
 
    <!-- Define the content type and display location. The settings
"html" and "card" are required for all Gmail contextual gadgets. -->
    <Content type="html" view="card">
    <!--[<span pre=""-->
        CDATA[
<script type="text/javascript">// <![CDATA[
src</span>="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript">
// ]]></script>
        <script type = "text/javascript">
 
         $(document).ready(function()
        {
            var messageid;
            var subject;
            var fromEmail;
            var toEmail

 
<!--                        //Gets all data from the email that was extracted and stores it in matches array.-->
            matches = google.contentmatch.getContentMatches();
            for(var match in matches)
            {
                for(var key in matches[match])
                {
                    if(key == 'message_id')
                    {messageid = matches[match][key];}
                    
                    if(key == 'sender_email')
                    {fromEmail = matches[match][key];}
                    
                    if(key == 'subject')
                    {subject = matches[match][key];}
                                        
                    if(key == 'recipient_email')
                    {toEmail = matches[match][key];} 
                }
            }
                       
            <!--//Creates the string which will be where the message will be located in Gmail-->
            var url = 'https://mail.google.com/mail/u/0/#all/' + messageid;
            var encodedurl = encodeURIComponent(url);

            <!--//AJAX call to  backend where I make calls into DVOD-->
            $('#showbtn').click(function(){
                //$('input[type=submit]', this).attr('disabled','disabled');
                var dataValues = "subject=" + subject + "&url=" + encodedurl + "&contact=" + contact + "&messageID=" + messageid;
                $.ajax({
                    type: 'GET',
                    data: dataValues,
                    cache: false,
                    contentType: "application/json",
                    dataType: "jsonp",
                    url: "http://office.docuvantage.com:8081/GmailAddon/?callback=?",
                    success: function(response){
                    <!--//Output result on success-->
                        if(response.success == 2)
                        {
                           
                        }
                        else if(response.success == 1)
                        {
                           
                        }
                        else if(response.success == 0)
                        {
                           
                        }
                    }
                });
                return false;
            });
        });
 
        adjustPageHeight();
 
        <!--//This adjusts the size of the window that will carry the button and list-->
        function adjustPageHeight()
        {
            gadgets.window.adjustHeight(50);
            setTimeout('adjustPageHeight()',1000);
        }
 
        //Counts the number of items in the drop down list
        function getListValue()
        {
            var val = document.getElementById("emailList");
            var email = val.options[val.selectedIndex].value;
            return email;
        }
 
        </script>
        <form id="myForm">
        </form>
    ]]>
  </Content>
</Module>
